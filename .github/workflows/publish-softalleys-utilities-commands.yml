name: Publish Softalleys.Utilities.Commands

on:
  workflow_dispatch:

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'
    - name: Get current version
      id: version
      run: |
        VERSION=$(grep -oP '<Version>\K[^<]+' Softalleys.Utilities.Commands/Softalleys.Utilities.Commands.csproj)
        echo "current_version=$VERSION" >> $GITHUB_OUTPUT
    - name: Increment version
      id: new_version
      run: |
        IFS='.' read -r major minor patch <<< "${{ steps.version.outputs.current_version }}"
        new_patch=$((patch + 1))
        new_version="$major.$minor.$new_patch"
        echo "new_version=$new_version" >> $GITHUB_OUTPUT
    - name: Update version in csproj
      run: |
        sed -i "s|<Version>${{ steps.version.outputs.current_version }}</Version>|<Version>${{ steps.new_version.outputs.new_version }}</Version>|" Softalleys.Utilities.Commands/Softalleys.Utilities.Commands.csproj
    - name: Commit version update
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add Softalleys.Utilities.Commands/Softalleys.Utilities.Commands.csproj
        git commit -m "Bump version to ${{ steps.new_version.outputs.new_version }}"
        git push
    - name: Build
      run: dotnet build Softalleys.Utilities.Commands/Softalleys.Utilities.Commands.csproj -c Release
    - name: Pack
      run: dotnet pack Softalleys.Utilities.Commands/Softalleys.Utilities.Commands.csproj -c Release -o ./nupkgs --include-symbols
    - name: Push to NuGet
      run: dotnet nuget push ./nupkgs/*.nupkg --source https://api.nuget.org/v3/index.json --api-key ${{ secrets.NUGET_API_KEY }} --skip-duplicate